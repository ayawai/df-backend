{"version":3,"sources":["Components/Viewable/index.tsx","Components/Editable/index.tsx","Home/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Option","Select","Viewable","useState","lists","setLists","useEffect","fetch","method","headers","Headers","mode","then","response","json","j","console","log","data","name","labelCol","span","wrapperCol","onFinish","values","initialValues","rate","Item","label","className","map","item","code","placeholder","id","hasFeedback","rules","required","message","value","noStyle","min","max","Group","Editable","update","setUpdate","columns","title","dataIndex","key","render","text","record","size","onClick","delData","info","select","onChange","option","type","htmlType","rowKey","e","dataSource","Header","Layout","Sider","Content","ContentComponent","contentCode","AYDemo","collapsed","setCollapsed","menu","setMenu","trigger","collapsible","theme","arg","keyPath","selectedKeys","defaultSelectedKeys","icon","UserOutlined","VideoCameraOutlined","UploadOutlined","style","padding","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e87df3e.chunk.js","sourcesContent":["import React, {FC, useState, useEffect} from 'react';\r\nimport {\r\n  Input,\r\n  Form,\r\n  Radio,\r\n  InputNumber,\r\n  Select\r\n} from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst Viewable: FC = function() {\r\n\r\n  let [lists, setLists] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/lists\",{\r\n      method: 'GET',\r\n      headers: new Headers({\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'text/plain'\r\n      }),\r\n      mode: 'cors'\r\n    })\r\n    .then(function(response) {\r\n      return response.json()\r\n    })\r\n    .then(function(j) {\r\n      console.log(j)\r\n      setLists(j.data)\r\n    })\r\n  }, []);\r\n\r\n  const formItemLayout = {\r\n    labelCol: { span: 2 },\r\n    wrapperCol: { span: 6 },\r\n  };\r\n\r\n  const onFinish = (values: any) => {\r\n    console.log('Received values of form: ', values);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        name=\"validate_other\"\r\n        {...formItemLayout}\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          'input-number': 3,\r\n          'checkbox-group': ['A', 'B'],\r\n          rate: 3.5,\r\n        }}\r\n      >\r\n        <Form.Item label=\"Plain Text\">\r\n          <span className=\"ant-form-text\">China</span>\r\n        </Form.Item>\r\n        {\r\n          lists.map(function(item: any) {\r\n            if (item.code === \"1\") {\r\n              return (\r\n                <Form.Item key={item.id} label=\"Text\">\r\n                  <Input placeholder={item.placeholder} />\r\n                </Form.Item>\r\n              )\r\n            }\r\n            if (item.code === \"2\") {\r\n              return (\r\n                <Form.Item\r\n                  key={item.id}\r\n                  name=\"select\"\r\n                  label=\"Select\"\r\n                  hasFeedback\r\n                  rules={[{ required: true, message: 'Please select your country!' }]}\r\n                >\r\n                  <Select placeholder={item.placeholder}>\r\n                    <Option value=\"china\">China</Option>\r\n                    <Option value=\"usa\">U.S.A</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              )\r\n            }\r\n            if (item.code === \"3\") {\r\n              return (\r\n                <Form.Item key={item.id} label=\"InputNumber\">\r\n                  <Form.Item name=\"input-number\" noStyle>\r\n                    <InputNumber placeholder={item.placeholder} min={1} max={10} />\r\n                  </Form.Item>\r\n                  <span className=\"ant-form-text\"> machines</span>\r\n                </Form.Item>\r\n              )\r\n            }\r\n            if (item.code === \"4\") {\r\n              return (\r\n                <Form.Item key={item.id} name=\"radio-group\" label=\"Radio.Group\">\r\n                  <Radio.Group>\r\n                    <Radio value=\"a\">item 1</Radio>\r\n                    <Radio value=\"b\">item 2</Radio>\r\n                    <Radio value=\"c\">item 3</Radio>\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n              )\r\n            }\r\n            return null\r\n          })\r\n        }\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Viewable;","import React, {FC, useEffect, useState} from 'react';\r\nimport { Table, Tag, Space, Button, Form, Input, Select, InputNumber, message } from 'antd';\r\n\r\nconst Option = Select.Option;\r\n\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'John Brown',\r\n    age: 32,\r\n    address: 'New York No. 1 Lake Park',\r\n    tags: ['nice', 'developer'],\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'Jim Green',\r\n    age: 42,\r\n    address: 'London No. 1 Lake Park',\r\n    tags: ['loser'],\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'Joe Black',\r\n    age: 32,\r\n    address: 'Sidney No. 1 Lake Park',\r\n    tags: ['cool', 'teacher'],\r\n  },\r\n];\r\n\r\nconst Editable: FC = function() {\r\n\r\n  const [lists, setLists] = useState([]);\r\n  const [update, setUpdate] = useState(false);\r\n\r\n  useEffect(function() {\r\n    fetch(\"http://localhost:4000/lists\",{\r\n      method: 'GET',\r\n      headers: new Headers({\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'text/plain'\r\n      }),\r\n      mode: 'cors'\r\n    })\r\n    .then(function(response) {\r\n      return response.json()\r\n    })\r\n    .then(function(j) {\r\n      console.log(j)\r\n      setLists(j.data)\r\n    })\r\n  }, [update])\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text: any) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: 'Code',\r\n      dataIndex: 'code',\r\n      key: 'code',\r\n    },\r\n    {\r\n      title: 'Scheme',\r\n      dataIndex: 'scheme',\r\n      key: 'scheme',\r\n    },\r\n    {\r\n      title: 'Placeholder',\r\n      dataIndex: 'placeholder',\r\n      key: 'placeholder',\r\n    },\r\n    // {\r\n    //   title: 'Tags',\r\n    //   key: 'tags',\r\n    //   dataIndex: 'tags',\r\n    //   render: (tags: any) => (\r\n    //     <>\r\n    //       {tags.map((tag: any) => {\r\n    //         let color = tag.length > 5 ? 'geekblue' : 'green';\r\n    //         if (tag === 'loser') {\r\n    //           color = 'volcano';\r\n    //         }\r\n    //         return (\r\n    //           <Tag color={color} key={tag}>\r\n    //             {tag.toUpperCase()}\r\n    //           </Tag>\r\n    //         );\r\n    //       })}\r\n    //     </>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text: string, record: any) => (\r\n        <Space size=\"middle\">\r\n          <a onClick={() => delData(record)}>Delete</a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const delData = (record: any) => {\r\n    console.log(record)\r\n    fetch(\"http://localhost:4000/delete?id=\" + record.id)\r\n    .then(function(response) {\r\n      return response.json()\r\n    })\r\n    .then(function(j) {\r\n      console.log(j)\r\n      if (j.code === 0) {\r\n        message.info('删除成功！');\r\n        setUpdate(!update)\r\n      }\r\n    })\r\n  }\r\n\r\n  const formItemLayout = {\r\n    labelCol: { span: 2 },\r\n    wrapperCol: { span: 6 },\r\n  };\r\n  \r\n  const onFinish = (values: any) => {\r\n    console.log('Received values of form: ', values);\r\n  \r\n    fetch(\"http://localhost:4000/add?code=\" + values.select)\r\n    .then(function(response) {\r\n      return response.json()\r\n    })\r\n    .then(function(j) {\r\n      console.log(j)\r\n      if (j.code === 0) {\r\n        message.info('添加成功！');\r\n        setUpdate(!update)\r\n      }\r\n    })\r\n  };\r\n\r\n  const changeSelect = (value: string, option: any) => {\r\n    // console.log(value)\r\n    // console.log(option)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        name=\"validate_other\"\r\n        {...formItemLayout}\r\n        onFinish={onFinish}\r\n        initialValues={{\r\n          'input-number': 3,\r\n          'checkbox-group': ['A', 'B'],\r\n          rate: 3.5,\r\n        }}\r\n      >\r\n        <Form.Item label=\"Plain Text\">\r\n          <span className=\"ant-form-text\">1</span>\r\n        </Form.Item>\r\n        <Form.Item \r\n          label=\"Text\"\r\n        >\r\n          <Form.Item name=\"text\" noStyle>\r\n            <Input />\r\n          </Form.Item>\r\n        </Form.Item>\r\n        <Form.Item label=\"InputNumber\">\r\n          <Form.Item name=\"input-number\" noStyle>\r\n            <InputNumber min={1} max={10} />\r\n          </Form.Item>\r\n          <span className=\"ant-form-text\"> machines</span>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"select\"\r\n          label=\"Select\"\r\n          hasFeedback\r\n          rules={[{ required: true, message: 'Please select your country!' }]}\r\n        >\r\n          <Select onChange={changeSelect} placeholder=\"请选择控件类型\">\r\n            <Option value=\"3\">数字</Option>\r\n            <Option value=\"1\">文本</Option>\r\n            <Option value=\"2\">下拉选择</Option>\r\n            <Option value=\"4\">单选按钮</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">新增</Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <Table rowKey={e => e.id} columns={columns} dataSource={lists} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Editable;","import React, {FC, useState, useEffect} from 'react';\r\nimport { Layout, Menu, Button } from 'antd';\r\nimport './index.css';\r\nimport Viewable from '../Components/Viewable';\r\nimport Editable from '../Components/Editable';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\n\r\ninterface ContentComponentProps {\r\n  contentCode: string;\r\n}\r\n\r\nfunction ContentComponent({contentCode}: ContentComponentProps) {\r\n  if (contentCode === \"1\") {\r\n    return (\r\n      <Viewable />\r\n    )\r\n  } else if (contentCode === \"2\") {\r\n    return (\r\n      <Editable />\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nconst AYDemo: FC = () => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [menu, setMenu] = useState(['1']);\r\n\r\n  function toggle() {\r\n    setCollapsed(!collapsed)\r\n  }\r\n\r\n  function selectMenu(arg: any) {\r\n    const { keyPath } = arg;\r\n    setMenu(() => keyPath)\r\n  }\r\n\r\n  return (\r\n    <Layout className=\"home_page\">\r\n        <Sider trigger={null} collapsible collapsed={collapsed}>\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" mode=\"inline\" onClick={selectMenu} selectedKeys={menu} defaultSelectedKeys={['1']}>\r\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n              显示页\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\r\n              配置页\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n              导航3\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n          <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n            {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n              className: 'trigger',\r\n              onClick: toggle,\r\n            })}\r\n          </Header>\r\n          <Content\r\n            className=\"site-layout-background\"\r\n            style={{\r\n              margin: '24px 16px',\r\n              padding: 24,\r\n              minHeight: 280,\r\n            }}\r\n          >\r\n            <ContentComponent contentCode={menu[0]} />\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n  )\r\n}\r\n\r\nexport default AYDemo;","import React, { FC } from 'react';\nimport Home from './Home';\nimport './App.css';\n\nconst App: FC = () => (\n  <div className=\"App\">\n    <Home></Home>\n  </div>\n);\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}